{"version":3,"sources":["assets/img/instruction.png","assets/audio/right-answer.mpeg","assets/audio/Wrong-answer.mp3","assets/audio/next.mpeg","components/Home.js","components/quiz/Quizinstructions.js","utils/is-empty.js","components/quiz/Play.js","components/quiz/QuizSummary.js","App.js","index.js"],"names":["module","exports","Home","Helmet","id","style","textAlign","className","to","Quizinstructions","src","instruction","alt","isEmpty","value","undefined","Object","keys","length","trim","Play","props","displayQuestions","questions","state","currentQuestion","nextQuestion","previousQuestion","currentQuestionIndex","answer","setState","numberOfQuestions","handleDisableButton","handleOptionClick","e","target","innerHTML","toLowerCase","setTimeout","document","getElementById","play","correctAnswer","wrongAnswer","handleNextButtonClick","prevState","handlePreviousButtonClick","handleQuitButtonClick","playButtonSound","window","confirm","history","push","handleButtonClick","M","toast","html","classes","displayLength","score","correctAnswers","numberOfAnsweredQuestion","numberOfAnsweredQuestions","endGame","navigator","vibrate","wrongAnswers","startTimer","countDownTime","Date","now","interval","setInterval","distance","minutes","Math","floor","seconds","clearInterval","time","previousButtonDisable","nextButtonDisable","alert","playerStats","console","log","hints","fiftyFifty","usedfiftyFifty","nextButtonDisabled","this","correctNotification","wrongNotification","buttonSound","float","question","onClick","optionA","optionB","optionC","optionD","classnames","previousButtonDisabled","Component","QuizSummary","numberOfAnswers","location","stats","remark","userScore","toFixed","App","path","exact","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d40d5e8e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/instruction.3fa111b0.png\";","module.exports = __webpack_public_path__ + \"static/media/right-answer.86576bb5.mpeg\";","module.exports = __webpack_public_path__ + \"static/media/Wrong-answer.c9afcc9e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/next.90a6d5af.mpeg\";","import React, { Fragment } from 'react';\r\nimport {Helmet} from 'react-helmet';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst Home = () =>(\r\n    <Fragment>\r\n        <Helmet><title> QuizeGuru - Home </title> </Helmet>\r\n       <div id=\"home\">\r\n        <section>\r\n            <div style={{textAlign:'center'}}>\r\n                <span className=\"mdi mdi-cube-outline cube mdi-48px \"></span>\r\n            </div>\r\n            <h1> QuizeGuru </h1>\r\n           \r\n            <div className=\"play-button-container\">\r\n            <ul>\r\n               <Link className=\"play-button\" to=\"/play/instructions\">Play</Link> \r\n            </ul>\r\n            </div>\r\n            <div className=\"auth-container\">\r\n                <Link to=\"/login\" className=\"auth-buttons\" id=\"login-button\">LogIN</Link>\r\n                <Link to=\"/register\" className=\"auth-buttons\" id=\"signup-button\">SignUP</Link>\r\n            </div>\r\n            \r\n        </section>\r\n        </div>\r\n        </Fragment>\r\n    );\r\nexport default Home;","import React,{Fragment} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Helmet} from 'react-helmet';\r\n\r\nimport instruction from '../../assets/img/instruction.png';\r\n\r\n\r\nconst Quizinstructions = () =>(\r\n    <Fragment>\r\n        <Helmet>\r\n            <title> Quize Instruction </title>\r\n        </Helmet>\r\n\r\n        <div className=\"instructions\">\r\n            <h1>\r\n                How to play the game\r\n            </h1>\r\n            <p>\r\n                Ensure you read this guid from start to finish.\r\n            </p>\r\n            <ul className=\"browser-default\" id=\"main-list\">\r\n                <li>The game has a duration of 3 minutes and ends as soon as your time elapses.</li>\r\n                <li>Each game consist of 10 questions.</li>\r\n                <li>\r\n                    Every question contains 4 option.\r\n                    <img src={instruction} alt=\"Quize app instruction example\"/>\r\n\r\n                </li>\r\n                <li>\r\n                    Select the option which best answer the question by clicking (or selecting ) it.\r\n                    <img src={instruction} alt=\"Quize app instruction example\"/>\r\n                </li>\r\n\r\n            </ul>\r\n            <div className=\"instruction-link\">\r\n                <span className=\"left\"><Link className=\"link-l\" to=\"/\"> No take me back </Link> </span>\r\n                <span className=\"right\"><Link className=\"link-r\"to=\"/play/quiz\"> Okay,Lets do this </Link> </span>\r\n            </div>\r\n        </div>\r\n    </Fragment>\r\n);\r\nexport default Quizinstructions;","const isEmpty = (value) => \r\nvalue === undefined ||\r\nvalue == null ||\r\n(typeof value==='object' && Object.keys(value).length === 0) ||\r\n(typeof value === 'string' && value.trim().length===0);\r\n\r\nexport default isEmpty;","import React,{Component, Fragment} from 'react';\r\nimport{Helmet} from 'react-helmet';\r\nimport questions from '../../questions.json';\r\nimport isEmpty from '../../utils/is-empty';\r\nimport M from 'materialize-css';\r\n\r\nimport correctNotification from '../../assets/audio/right-answer.mpeg';\r\nimport wrongNotification from '../../assets/audio/Wrong-answer.mp3';\r\nimport buttonSound from '../../assets/audio/next.mpeg';\r\n\r\nimport classnames from 'classnames';\r\nclass Play extends Component{\r\n\r\n    constructor (props){\r\n        super(props);\r\n        this.state={\r\n        questions,\r\n        currentQuestion:{},\r\n        nextQuestion:{},\r\n        previousQuestion:{},\r\n        answer:'',\r\n        numberOfQuestions:0,\r\n        numberOfAnsweredQuestions:0,\r\n        currentQuestionIndex:0,\r\n        score:0,\r\n        correctAnswers:0,\r\n        wrongAnswers:0,\r\n        hints:5,\r\n        fiftyFifty:2,\r\n        usedfiftyFifty:false,\r\n        nextButtonDisabled:false,\r\n        previousButtonDisable:true,\r\n        time:{}\r\n        };\r\n\r\n        this.interval = null\r\n\r\n\r\n       \r\n    }\r\n\r\n    componentDidMount () {\r\n        const { questions,currentQuestion,nextQuestion,previousQuestion}=this.state;\r\n        this.displayQuestions(questions,currentQuestion,nextQuestion,previousQuestion)\r\n        this.startTimer();\r\n    }\r\n   \r\n    displayQuestions=(questions = this.state.questions,currentQuestion,nextQuestion,previousQuestion) => {\r\n        let {currentQuestionIndex}= this.state;\r\n        if (!isEmpty(this.state.questions)) {\r\n            questions=this.state.questions;\r\n            currentQuestion=questions[currentQuestionIndex];\r\n            nextQuestion=questions[currentQuestionIndex + 1];\r\n            previousQuestion=questions[currentQuestionIndex - 1];\r\n            const answer = currentQuestion.answer;\r\n            this.setState({\r\n                currentQuestion,\r\n                nextQuestion,\r\n                previousQuestion,\r\n                numberOfQuestions:questions.length,\r\n                answer\r\n            },()=>{\r\n                this.handleDisableButton();\r\n            });\r\n          }\r\n      };\r\n\r\n      handleOptionClick=(e)=> {\r\n            if(e.target.innerHTML.toLowerCase() === this.state.answer.toLowerCase()){\r\n                setTimeout(()=>{\r\n                    document.getElementById('correct-sound').play();\r\n                },1);\r\n                \r\n                this.correctAnswer();\r\n            }else{\r\n                setTimeout(()=>{\r\n                    document.getElementById('wrong-sound').play();\r\n                },1);\r\n                \r\n                this.wrongAnswer();\r\n            }\r\n      }\r\n\r\n      handleNextButtonClick=()=>{\r\n         if (this.state.nextQuestion !== undefined){\r\n             this.setState(prevState=>({\r\n                 currentQuestionIndex:prevState.currentQuestionIndex + 1\r\n             }),() => {\r\n                 this.displayQuestions(this.state.state,this.state.currentQuestion, this.state.nextQuestion,this.state.previousQuestion)\r\n             });\r\n         }\r\n      };\r\n\r\n      handlePreviousButtonClick=()=>{\r\n        if (this.state.previousQuestion !== undefined){\r\n            this.setState(prevState=>({\r\n                currentQuestionIndex:prevState.currentQuestionIndex - 1\r\n            }),() => {\r\n                this.displayQuestions(this.state.state,this.state.currentQuestion, this.state.nextQuestion,this.state.previousQuestion)\r\n            });\r\n        }\r\n     };\r\n\r\n     handleQuitButtonClick= () => {\r\n        this.playButtonSound();\r\n        window.confirm('Are you sure you want to quit ?');\r\n        if(window.confirm('Are you sure you want to quit ?')){\r\n            this.props.history.push('/');\r\n        }\r\n     };\r\n\r\n      handleButtonClick=(e)=>{\r\n            switch(e.target.id){\r\n                case 'next-button':\r\n                    this.handleNextButtonClick();\r\n                    break;\r\n                case 'previous-button':\r\n                this.handlePreviousButtonClick();\r\n                break;\r\n\r\n                case 'quit-button':\r\n                this.handleQuitButtonClick();\r\n                break;\r\n\r\n                default:\r\n                    break;\r\n            \r\n                    \r\n            }\r\n        \r\n      };\r\n\r\n      playButtonSound=()=>{\r\n          document.getElementById('button-sound').play();\r\n      };\r\n\r\n      correctAnswer = () =>{\r\n          M.toast({\r\n              html:'correct Answer',\r\n              classes:'toast-valid',\r\n              displayLength:1500\r\n          });\r\n          this.setState(prevState => ({\r\n                score: prevState.score+1,\r\n                correctAnswers:prevState.correctAnswers+1,\r\n                currentQuestionIndex:prevState.currentQuestionIndex +1,\r\n                numberOfAnsweredQuestion:prevState.numberOfAnsweredQuestions + 1\r\n          }), () => {\r\n            if(this.state.nextQuestion===undefined){\r\n                this.endGame();\r\n            }else{\r\n                this.displayQuestions(this.state.questions,this.state.currentQuestion,this.state.nextQuestion,this.state.previousQuestion);\r\n            }\r\n          });\r\n      }\r\n      wrongAnswer = () =>{\r\n          navigator.vibrate(1000);\r\n        M.toast({\r\n            html:'wrong Answer',\r\n            classes:'toast-invalid',\r\n            displayLength:1500\r\n        });\r\n        this.setState(prevState => ({\r\n           wrongAnswers: prevState.wrongAnswer +1,\r\n            currentQuestionIndex:prevState.currentQuestionIndex + 1,\r\n            numberOfAnsweredQuestions:prevState.numberOfAnsweredQuestions + 1\r\n\r\n        }), () => {\r\n            if(this.state.nextQuestion===undefined){\r\n                this.endGame();\r\n            }else{\r\n                this.displayQuestions(this.state.questions,this.state.currentQuestion,this.state.nextQuestion,this.state.previousQuestion);\r\n            }\r\n           \r\n        });\r\n    }\r\n\r\n    startTimer = () => {\r\n        const countDownTime = Date.now() + 180000;\r\n        this.interval = setInterval(() =>{\r\n            const now = new Date();\r\n            const distance  = countDownTime - now;\r\n\r\n            const minutes = Math.floor((distance % (1000*60*60))/(1000*60));\r\n            const seconds = Math.floor((distance % (1000*60))/1000);\r\n\r\n            if (distance < 0) {\r\n                clearInterval(this.interval);\r\n                this.setState({\r\n                    time:{\r\n                        minutes: 0,\r\n                        seconds:0\r\n                    }\r\n                },() => {\r\n                   this.endGame();\r\n                });\r\n            }else{\r\n                this.setState({\r\n                    time:{\r\n                        minutes,\r\n                        seconds\r\n                    }\r\n                });\r\n            }\r\n        },1000);\r\n    }\r\n\r\n\r\n    handleDisableButton=()=>{\r\n        if(this.state.previousQuestion=== undefined || this.state.currentQuestionIndex===0){\r\n            this.setState({\r\n                previousButtonDisable:true\r\n            });\r\n\r\n        }else{\r\n            this.setState({\r\n                previousButtonDisable:false\r\n            });\r\n\r\n\r\n        }\r\n\r\n        if(this.state.nextQuestion=== undefined || this.state.currentQuestionIndex+1===this.state.numberOfQuestions){\r\n            this.setState({\r\n                nextButtonDisable:true\r\n            });\r\n\r\n        }else{\r\n            this.setState({\r\n                nextButtonDisable:false\r\n            });\r\n\r\n\r\n        }\r\n    };\r\n\r\n    endGame=()=>{\r\n        alert('Quiz has ended!');\r\n        const { state } = this;\r\n        const playerStats = {\r\n            score:state.score,\r\n            numberOfQuestions:state.numberOfQuestions,\r\n            numberOfAnsweredQuestions:state.correctAnswers + state.wrongAnswers,\r\n            correctAnswers:state.correctAnswers,\r\n            wrongAnswers:state.wrongAnswers,\r\n\r\n        };\r\n        console.log(playerStats);\r\n        setTimeout(()=>{\r\n            this.props.history.push('/play/QuizSummary',playerStats);\r\n        },1000)\r\n    }\r\n    \r\n    \r\n    render(){\r\n\r\n        const { currentQuestion,\r\n            currentQuestionIndex,\r\n            numberOfQuestions,\r\n             time\r\n            } = this.state;\r\n        return(\r\n            <Fragment>\r\n            <Helmet><title> Quiz Page</title></Helmet>\r\n            <Fragment>\r\n        <audio  id=\"correct-sound\" src={correctNotification}></audio>\r\n        <audio id=\"wrong-sound\" src={wrongNotification}></audio>\r\n        <audio id=\"button-sound\" src={buttonSound}></audio>\r\n            </Fragment>\r\n            <div className=\"questions\"> \r\n            <h2>Free Quiz Mode</h2>\r\n                <div className=\"lifeline-container\">\r\n                    <p>\r\n                        <span className=\"mdi mdi-set-center mdi-24px lifeline-icon\"></span><span className=\"lifeline\">2</span>\r\n                    </p>\r\n                    <p>\r\n                        <span className=\"mdi mdi-lightbulb-on-outline mdi-24px lifeline-icon\"></span><span className=\"lifeline\">5</span>\r\n                    </p>\r\n                </div>\r\n                <div>\r\n                   <p>\r\n        <span className=\"left\" style= {{float:'left'}}>{currentQuestionIndex + 1} of {numberOfQuestions}</span>\r\n                <span className=\"right\" style= {{float:'right'}}>{time.minutes}:{time.seconds}<span className=\"mdi mdi-clock-outline mdi-24px\"></span></span>\r\n                   </p> \r\n                </div>\r\n            <h5>{currentQuestion.question }</h5>\r\n            <div className=\"option-container\">\r\n                <p onClick={this.handleOptionClick}className=\"option\">{currentQuestion.optionA}</p>\r\n                <p onClick={this.handleOptionClick}className=\"option\">{currentQuestion.optionB}</p>\r\n            </div>\r\n            <div className=\"option-container\">\r\n                <p onClick={this.handleOptionClick}className=\"option\">{currentQuestion.optionC}</p>\r\n                <p onClick={this.handleOptionClick}className=\"option\">{currentQuestion.optionD}</p>\r\n            </div>\r\n            <div className=\"button-container\">\r\n                <button \r\n                    className={classnames('',{'disable':this.state.previousButtonDisabled})}\r\n                    id=\"previous-button\" onClick={ this.handleButtonClick}>\r\n                    Previous\r\n                </button>\r\n                <button \r\n                    className={classnames('',{'disable': this.state.nextButtonDisabled})}\r\n                    id=\"next-button\" onClick={ this.handleButtonClick}>\r\n                    Next\r\n                </button>\r\n                <button id=\"quit-button\" onClick={ this.handleButtonClick}>Out</button>\r\n            </div>\r\n\r\n             </div>  \r\n            </Fragment>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Play;","import React, { Component,Fragment } from 'react';\r\nimport {Helmet} from 'react-helmet';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass QuizSummary extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            score:0,\r\n            numberOfQuestions:0,\r\n            numberOfAnswers:0,\r\n            correctAnswers:0,\r\n            wrongAnswers:0,\r\n\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        const { state } = this.props.location;\r\n        this.setState(\r\n            {\r\n                score:(state.score/ state.numberOfQuestions)*100,\r\n                numberOfQuestions:state.numberOfQuestions,\r\n                numberOfAnsweredQuestions:state.numberOfAnsweredQuestions,\r\n                correctAnswers:state.correctAnswers,\r\n                wrongAnswers:state.wrongAnswers,\r\n    \r\n            }\r\n        );\r\n    }\r\n    render(){\r\n        const {state} = this.props.location;\r\n        let stats,remark;\r\n        const userScore = this.state.score;\r\n\r\n        if (userScore<=30){\r\n            remark='You need more practice!';\r\n        }else if(userScore > 30 && userScore<= 50){\r\n            remark='Better Lck Next Time';\r\n        } else if(userScore <= 70 && userScore > 50){\r\n            remark='You can do better';\r\n        }else if(userScore >= 71 && userScore<= 84){\r\n            remark='you did great';\r\n        }else{\r\n            remark='you are a genius';\r\n        }\r\n        if (state !==undefined){\r\n            stats=(\r\n                <Fragment>\r\n                    <div className=\"container\">\r\n                    \r\n                <div>\r\n                    <span className=\"mdi mdi-check-circle-outline success-icon mdi-48px\" id=\"check-icon\"></span>\r\n                </div>\r\n                <h1>Quiz Has Ended</h1>\r\n                \r\n                    <h4>{remark}</h4>\r\n                    <h2>Your Score:{this.state.score.toFixed(0)}&#37;</h2>\r\n            <div className=\"stat-poin\">\r\n                    <span className=\"stat-left\">Total number of question :</span>\r\n            <span className=\"right\">{this.state.numberOfQuestions}</span><br/>\r\n\r\n            <span className=\"stat-left\">Number of attempted question :</span>\r\n            <span className=\"right\">{this.state.numberOfAnsweredQuestions}</span><br/>\r\n\r\n            <span className=\"stat-left\">Number of correct answers :</span>\r\n            <span className=\"right\">{this.state.correctAnswers}</span><br/>\r\n\r\n            <span className=\"stat-left\">Number of wrong answers :</span>\r\n            <span className=\"right\">{this.state.wrongAnswers}</span><br/>\r\n\r\n            <span className=\"stat-left\">Total number of question :</span>\r\n            <span className=\"right\">{this.state.numberOfQuestions}</span><br/>\r\n            </div>\r\n\r\n                \r\n\r\n                <section>\r\n                    <ul>\r\n                        <li className=\"back\">\r\n                            <Link to=\"/\">Back to Home</Link>\r\n                        </li>\r\n                        <li className=\"back\">\r\n                            <Link to=\"/play/quiz\">Play Again</Link>\r\n                        </li>\r\n                    </ul>\r\n                </section>\r\n                </div>\r\n                </Fragment>\r\n            );\r\n        }else{\r\n            stats=(\r\n            <section>\r\n            <h1 className=\"no-stats\"> No statistic Available </h1>\r\n           \r\n            <ul>\r\n            <li>\r\n                <Link to=\"/\">Back to Home</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/play/quiz\">Play Again</Link>\r\n            </li>\r\n        </ul>\r\n        </section>\r\n            );\r\n        }\r\n        return(\r\n            <Fragment>\r\n                <Helmet> <title> Quiz App-Summary</title></Helmet>\r\n                {stats}\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuizSummary;","import React from 'react';\nimport {BrowserRouter as Router,Route} from 'react-router-dom';\nimport Home from './components/Home';\nimport Quizinstructions from './components/quiz/Quizinstructions';\nimport Play from './components/quiz/Play';\nimport QuizSummary from './components/quiz/QuizSummary';\n\nfunction App() {\n  return (\n    <Router>\n      <Route path=\"/\" exact component={Home}/>\n      <Route path=\"/play/instructions\" exact component={Quizinstructions}/>\n      <Route path=\"/play/Quiz\" exact component={Play}/>\n      <Route path=\"/play/quizSummary\" exact component={QuizSummary}/>\n      </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/@mdi/font/css/materialdesignicons.min.css';\n\n\nimport './styles/styles.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}